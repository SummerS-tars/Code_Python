print("Hello, %s" % "world")

print("Hello, %s, %s" % ("world", "python"))\

str2 = "交叉碰撞"
str3 = "学科融合"

print(f"我最喜欢！{str2}！{str3}！")


word_list = [
    "变量", "常量", "数据类型", "整型", "浮点型", "字符型", "布尔型", "数组", "字符串",
    "结构体", "联合体", "枚举", "指针", "引用", "运算符", "算术运算符", "关系运算符",
    "逻辑运算符", "位运算符", "赋值运算符", "表达式", "语句类", "对象", "属性", "方法",
    "封装", "继承", "多态", "抽象类", "接口", "重载", "覆盖", "泛型", "模板", "异常", "错误处理",
    "调试", "断点", "数组", "链表", "单链表", "双链表", "循环链表", "栈", "队列", "顺序队列",
    "循环队列", "优先队列", "树", "二叉树", "二叉搜索树", "平衡二叉树", "红黑树", "堆",
    "大顶堆", "小顶堆", "图", "顶点", "边", "有向图", "无向图", "邻接矩阵", "邻接表",
    "深度优先搜索", "广度优先搜索", "哈希表", "散列表", "哈希函数", "冲突解决",
    "开放地址法", "链地址法", "算法", "时间复杂度", "空间复杂度", "冒泡排序", "选择排序",
    "插入排序", "希尔排序", "归并排序", "快速排序", "堆排序", "计数排序", "桶排序",
    "基数排序", "查找算法", "顺序查找", "二分查找", "哈希查找", "动态规划", "贪心算法",
    "分治算法", "回溯算法", "白盒测试", "黑盒测试", "灰盒测试", "回归测试", "压力测试",
    "性能测试", "冒烟测试", "极限编程", "瀑布模型", "螺旋模型", "垃圾回收", "引用计数",
    "标记清除", "分代收集", "内存泄漏", "缓冲区溢出", "空指针", "野指针", "序列化",
    "反序列化", "密钥管理", "密钥交换", "遗传算法", "遗传编程", "蚁群算法", "单例模式",
    "工厂模式", "抽象工厂模式", "建造者模式", "原型模式", "适配器模式", "桥接模式",
    "组合模式", "装饰器模式", "外观模式", "享元模式", "代理模式", "责任链模式", "命令模式",
    "解释器模式", "迭代器模式", "中介者模式", "备忘录模式", "观察者模式", "发布订阅模式",
    "状态模式", "策略模式", "模板方法模式", "访问者模式", "空对象模式", "规格模式",
    "依赖注入", "控制反转", "面向切面编程", "断言", "单元测试", "集成测试", "端到端测试",
    "健全测试", "探索性测试", "硬件令牌", "软件令牌", "生物识别", "指纹识别", "量子算法",
    "数字签名迁移", "密钥交换迁移", "证书体系更新", "密码敏捷性", "密码破解",
    "暴力破解", "字典攻击", "彩虹表", "侧信道攻击"
]

long_string = """啊啊啊啊啊宝宝你是一个""" + ",".join(word_list) + """香香软软的小蛋糕啊"""

print(long_string)

print("""{0},{1}""".format("hello", "world"))
